// 5.2 Пустой и составной оператор
// Составной оператор заключен в {}т.е. там где ожидалось одно выражение может поместиться несоклько
// Пустой оператор - ; наоборот где требуется оператор но надо ничего не делать:
let a = [1, 2],
  n;
for (let i = 0; i < a.length; a[i++] = 0); // все делает [i++] поэтому тело не нужно, но использовать обязаны
// 5.3 Условные операторы
// 5.3.1 if
// Сама конструкция такая: if(выражение) оператор 1 else оператор 2. т.е. по сути {} не нужны... но можно легко запутаться, поэтому ставим везде!

// 5.3.3 switch
switch (n) {
  case 1: // case это только начальная точка...
    break; // поэтому обязательно наличие break (или return) чтобы выйти в конец цикла, иначе по всем нижестоящим case пройдемся
  default:
    break;
}

function convert(x) {
  switch (typeof x) {
    case "number": // Преобразование после свич сравнивается с case через === т.е. типы должны совпадать!
      return x.toString(16); // Преобразовать число в шестнадцатеричное целое
    case "string":
      return '"' + x + '"'; // Возвратить строку, заключенную в ковычки
    default:
      return String(x); // Если ничего из этого, то просто преобразуем как обычно
  }
}
console.log(convert(["dsf", "fdg"]));

// 5.4 Циклы
// 5.4.1 while
// while (выражение) оператор
let count = 0;
while (count < 10) {
  console.log(count);
  count++;
}
